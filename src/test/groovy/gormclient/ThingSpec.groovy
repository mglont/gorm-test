/*
 * This Spock specification was auto generated by running the Gradle 'init' task
 * by 'mglont' at '22/09/16 23:32' with Gradle 3.1
 *
 * @author mglont, @date 22/09/16 23:32
 */

package gormclient

import grails.gorm.annotation.Entity
import grails.transaction.Rollback
import grails.transaction.Transactional
import org.grails.orm.hibernate.HibernateDatastore
import org.springframework.transaction.PlatformTransactionManager
import spock.lang.AutoCleanup
import spock.lang.Shared
import spock.lang.Specification

class ThingSpec extends Specification {

    @Shared @AutoCleanup HibernateDatastore datastore
    //@Shared PlatformTransactionManager txManager

    void setupSpec() {
        datastore = new HibernateDatastore(Pet)
        //txManager = datastore.getTransactionManager()
        println "setupSpec done"
    }

    //@Transactional
    def setup() {
        def p = new Pet(name: 'doggy')
        p.save()
        println "setup  done"
    }

    //@Rollback
    void "gorm works"() {
        expect:
        Pet.count() == 1

        when:
        Pet doggy = Pet.findByName('doggy')
        then:
        doggy.counter == 0

        when:
        doggy.counter--
        then:
        doggy.validate() == false

        when:
        doggy.counter = 2
        then:
        Pet.withNewSession { doggy.save() }
        Pet.withNewSession { Pet.get(1).counter } == 2
    }
}

@Entity
class Pet {
    String name
    int age = 0

    static constraints = {
        name unique: true
        age min: 0
    }
}
